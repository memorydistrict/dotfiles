--+=+--------------------+=+--
--+=+-: Plugin.Outline :-+=+--
--+=+--------------------+=+--

--  TODO:   Map keybindings to `user.config.keymap.tools.outline`
--  TODO:   Map icons to `user.config.ui.outline`

return {
    {
        'hedyhli/outline.nvim',
        lazy = true,
        cmd = {
            'Outline',
            'OutlineOpen'
        },
        config = function()
            require('outline').setup({
                outline_window = {
                    position = 'right',
                    split_command = nil,
                    width = 45,
                    --  Turns the `width` value to a percentage if true
                    relative_width = false,
                    auto_close = false,
                    auto_jump = false,
                    jump_highlight_duration = 300,
                    center_on_jump = true,

                    --  Vim options for the outline window
                    show_numbers = false,
                    show_relative_numbers = false,
                    wrap = false,

                    --  `true`, `false`, `'focus_in_outline'`, `'focus_in_code'`
                    show_cursorline = true,
                    --  Enable this only if `show_cursorline` is enabled
                    hide_cursor = false,
                    focus_on_open = true,
                    winhl = '',
                },
                outline_items = {
                    show_symbol_details = true,
                    show_symbol_lineno = false,
                    highlight_hovered_item = true,
                    auto_set_cursor = true,
                    auto_update_events = {
                        follow = {
                            'CursorMoved'
                        },
                        items = {
                            'InsertLeave',
                            'WinEnter',
                            'BufEnter',
                            'BufWinEnter',
                            'TabEnter',
                            'BufWritePost',
                        },
                    },
                },
                guides = {
                    enabled = true,
                    markers = {
                        vertical = '‚îÇ',
                        middle = '‚îú',
                        bottom = '‚îî',
                    },
                },
                symbol_folding = {
                    autofold_depth = 1,
                    auto_unfold = {
                        hovered = true,
                        only = true,
                    },
                    markers = { 'Ôë†', 'Ôëº' },
                },
                preview_window = {
                    auto_preview = false,
                    open_hover_on_preview = false,
                    width = 50,
                    min_width = 50,
                    relative_width = true,
                    border = 'single',
                    winhl = 'NormalFloat:',
                    winblend = 0,
                    live = false,
                },
                keymaps = {
                    show_help = '?',
                    close = { '<Esc>', 'q' },
                    goto_location = '<CR>',
                    peek_location = 'o',
                    goto_and_close = '<S-CR>',
                    restore_location = '<C-g>',
                    hover_symbol = '<C-Space>',
                    toggle_preview = 'K',
                    rename_symbol = 'r',
                    code_actions = 'a',
                    fold = 'h',
                    unfold = 'l',
                    fold_toggle = '<Tab>',
                    fold_toggle_all = '<S-Tab>',
                    fold_all = 'W',
                    unfold_all = 'E',
                    fold_reset = 'R',
                    --  Move up/down by one line and peek_location immediately
                    up_and_jump = '<C-k>',
                    down_and_jump = '<C-j>',
                },
                providers = {
                    priority = {
                        'lsp',
                        'coc',
                        'markdown',
                        'norg'
                    },
                    lsp = {
                        blacklist_clients = {},
                    },
                    markdown = {
                        filetypes = { 'markdown' },
                    },
                },
                symbols = {
                    filter = nil,
                    icon_fetcher = nil,
                    icon_source = nil,
                    icons = {
                        File = { icon = 'Û∞àî', hl = 'Identifier' },
                        Module = { icon = 'Û∞Üß', hl = 'Include' },
                        Namespace = { icon = 'Û∞Ö™', hl = 'Include' },
                        Package = { icon = 'Û∞èó', hl = 'Include' },
                        Class = { icon = 'ùìí', hl = 'Type' },
                        Method = { icon = '∆í', hl = 'Function' },
                        Property = { icon = 'Óò§', hl = 'Identifier' },
                        Field = { icon = 'Û∞Ü®', hl = 'Identifier' },
                        Constructor = { icon = 'Óàè', hl = 'Special' },
                        Enum = { icon = '‚Ñ∞', hl = 'Type' },
                        Interface = { icon = 'Û∞ú∞', hl = 'Type' },
                        Function = { icon = 'ÔÇö', hl = 'Function' },
                        Variable = { icon = 'Óûõ', hl = 'Constant' },
                        Constant = { icon = 'Óà¨', hl = 'Constant' },
                        String = { icon = 'ùìê', hl = 'String' },
                        Number = { icon = '#', hl = 'Number' },
                        Boolean = { icon = '‚ä®', hl = 'Boolean' },
                        Array = { icon = 'Û∞Ö™', hl = 'Constant' },
                        Object = { icon = '‚¶ø', hl = 'Type' },
                        Key = { icon = 'üîê', hl = 'Type' },
                        Null = { icon = 'NULL', hl = 'Type' },
                        EnumMember = { icon = 'ÔÖù', hl = 'Identifier' },
                        Struct = { icon = 'ùì¢', hl = 'Structure' },
                        Event = { icon = 'üó≤', hl = 'Type' },
                        Operator = { icon = '+', hl = 'Identifier' },
                        TypeParameter = { icon = 'ùôè', hl = 'Identifier' },
                        Component = { icon = 'Û∞Ö¥', hl = 'Function' },
                        Fragment = { icon = 'Û∞Ö¥', hl = 'Constant' },
                        TypeAlias = { icon = 'Óùû ', hl = 'Type' },
                        Parameter = { icon = 'Ó™í ', hl = 'Identifier' },
                        StaticMethod = { icon = 'Ó™å ', hl = 'Function' },
                        Macro = { icon = 'ÔÑ∂ ', hl = 'Function' },
                    },
                },
            })
        end,
    },
}

-- vim: ts=4 sts=4 sw=4 et
