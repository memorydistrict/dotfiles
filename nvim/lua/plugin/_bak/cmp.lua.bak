--+=+=-- Autocompletion in Neovim --+=+--

return {
    --+=+-- nvim-cmp --+=+--
    --  Autocompletion engine for Neovim
    --  https://github.com/hrsh7th/nvim-cmp
    'hrsh7th/nvim-cmp',
    event = 'InsertEnter',
    dependencies = {

        --  NOTE:
        --  Snippet engine goes here:

        {
            --+=+-- LuaSnip --+=+--
            --  Snippet engine for Neovim written in Lua
            --  https://github.com/L3MON4D3/LuaSnip
            'L3MON4D3/LuaSnip',
            build = (function()
                --  Build step is required for regex support in snippets (not support in Windows)
                if vim.fn.has 'win32' == 1 or vim.fn.executable 'make' == 0 then
                    return
                end
                return 'make install_jsregexp'
            end)(),
            dependencies = {
                {
                    --+=+-- friendly-snippets --+=+--
                    --  Snippets collection for varying programming languages
                    --  https://github.com/rafamadriz/friendly-snippets
                    'rafamadriz/friendly-snippets',
                    config = function()
                        require('luasnip.loaders.from_vscode').lazy_load()
                    end,
                },
            },
        },

        --  NOTE:
        --  Additional completion sources go here:

        --+=+-- cmp_luasnip --+=+=--
        --  LuaSnip completion source for nvim-cmp
        --  https://github.com/saadparwaiz1/cmp_luasnip
        'saadparwaiz1/cmp_luasnip',

        --+=+-- cmp-nvim-lsp --+=+--
        --  Completion source for Neovim's
        --  https://github.com/hrsh7th/cmp-nvim-lsp
        'hrsh7th/cmp-nvim-lsp',

        --+=+-- cmp-path --+=+--
        --  nvim-cmp source for filesystem paths
        --  https://github.com/hrsh7th/cmp-path
        'hrsh7th/cmp-path',
    },
    config = function()
        --  :help cmp
        local cmp = require 'cmp'
        local luasnip = require 'luasnip'
        luasnip.config.setup {}

        cmp.setup {
            snippet = {
                expand = function(args)
                    luasnip.lsp_expand(args.body)
                end,
            },
            completion = { completeopt = 'menu,menuone,noinsert' },

            --  :help ins-completion
            mapping = cmp.mapping.preset.insert {
                --  Select the [n]ext item
                --  ALT:    ['<Tab>']
                ['<C-n>'] = cmp.mapping.select_next_item(),
                --  Select the [p]revious item
                --  ALT:    ['<S-Tab>']
                ['<C-p>'] = cmp.mapping.select_prev_item(),

                --  Scroll the documentation window [b]ack / [f]orward
                ['<C-b>'] = cmp.mapping.scroll_docs(-4),
                ['<C-f>'] = cmp.mapping.scroll_docs(4),

                --  Accept ([y]es) the completion
                --  This will auto-import if your LSP supports it
                --  This will expand snippets if the LSP sent a snippet
                --  ALT:    ['<CR>']
                ['<C-y>'] = cmp.mapping.confirm { select = true },

                --  Manually trigger a completion from nvim-cmp
                ['<C-Space>'] = cmp.mapping.complete {},

                --  Move forward ([l]) through the snippet expansion
                ['<C-l>'] = cmp.mapping(function()
                    if luasnip.expand_or_locally_jumpable() then
                        luasnip.expand_or_jump()
                    end
                end, { 'i', 's' }),
                --  Move backward ([h]) through the snippet expansion
                ['<C-h>'] = cmp.mapping(function()
                    if luasnip.locally_jumpable(-1) then
                        luasnip.jump(-1)
                    end
                end, { 'i', 's' }),

                --  For more advanced Luasnip keyamps:
                --  https://github.com/L3MON4D3/LuaSnip?tab=readme-ov-file#keymaps
            },
            sources = {
                { name = 'nvim_lsp' },
                { name = 'luasnip' },
                { name = 'path' },
            },
        }
    end,
}

--  vim: ts=4 sts=4 sw=4 et
