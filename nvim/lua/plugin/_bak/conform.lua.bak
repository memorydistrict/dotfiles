--+=+-- Auto-formatting in Neovim --+=+--

return {
    --+=+-- conform.nvim --+=+--
    --  Lightweight formatting engine that pairs well with LSP
    --  https://github.com/stevearc/conform.nvim
    'stevearc/conform.nvim',
    event = {
        "BufReadPre",
        "BufNewFile"
    },
    lazy = false,
    keys = {
        {
            '<leader>f',
            function()
                require('conform').format {
                    async = true,
                    lsp_fallback = true
                }
            end,
            mode = '',
            desc = '[F]ormat buffer',
        },
    },
    opts = {
        notify_on_error = false,

        format_on_save = function(bufnr)
            --  NOTE:
            --  The below list is called in disabling languages
            --  Additional languages can be added here
            --  Listed languages can also be set to false to re-enable
            local disable_filetypes = {
                c = true,
                cpp = true
            }

            return {
                timeout_ms = 500,
                lsp_fallback = not disable_filetypes[vim.bo[bufnr].filetype],
            }
        end,

        --  NOTE:
        --  Specify formatters within curly braces
        --  You can run multiple formatters sequentially by specifying a list
        --  You can also run check multiple formatters until one is found by specifying a sub-list
        formatters_by_ft = {
            bash = { "beautysh" },
            css = { { "prettierd", "prettier" } },
            html = { "htmlbeautifier" },
            lua = { 'stylua' },
            javascript = { { "prettierd", "prettier" } },
            json = { { "prettierd", "prettier" } },
            markdown = { { "prettierd", "prettier" } },
            python = { "isort", "black" },
            rust = { "rustfmt" },
            scss = { { "prettierd", "prettier" } },
        },
    },
}

--  vim: ts=4 sts=4 sw=4 et
