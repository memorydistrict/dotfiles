--  TODO:   Re-factor for current setup

--+=+-- Fuzzy finder (files, lsp, etc.) in Neovim --+=+--
--  :help telescope

return {
    --+=+-- telescope.nvim --+=+--
    --  Find, filter, preview and pick items in Neovim
    --  https://github.com/nvim-telescope/telescope.nvim
    'nvim-telescope/telescope.nvim',
    event = 'VimEnter',
    branch = '0.1.x',
    dependencies = {
        --+=+-- plenary.nvim --+=+--
        --  Additional lua functions for Neovim
        --  https://github.com/nvim-lua/plenary.nvim
        'nvim-lua/plenary.nvim',
        {
            --+=+-- telescope-fzf-native.nvim --+=+--
            --  Sorting algorithm for telescope.nvim
            --  https://github.com/nvim-telescope/telescope-fzf-native.nvim
            'nvim-telescope/telescope-fzf-native.nvim',
            build = 'make',
            cond = function()
                return vim.fn.executable 'make' == 1
            end,
        },
        {
            --+=+-- telescope-ui-select.nvim --+=+--
            --  Set vim.ui.select to telescope.nvim, 
            --  https://github.com/nvim-telescope/telescope-ui-select.nvim
            'nvim-telescope/telescope-ui-select.nvim'
        },
        {
            --+=+-- nvim-web-devicons --+=+--
            --  Icons for Neovim's UI implementations
            --  https://github.com/nvim-tree/nvim-web-devicons
            'nvim-tree/nvim-web-devicons',
            enabled = vim.g.have_nerd_font
        },
    },
    config = function()
        --  :help telescope.setup
        require('telescope').setup {
            defaults = {
                mappings = {
                    i = { ['<c-enter>'] = 'to_fuzzy_refine' },
                },
            },
            pickers = {},
            extensions = {
                ['ui-select'] = {
                    require('telescope.themes').get_dropdown(),
                },
            },
        }

        --  Enable Telescope extensions if they are installed
        pcall(require('telescope').load_extension, 'fzf')
        pcall(require('telescope').load_extension, 'ui-select')

        --+=+=-- Keymaps --+=+--
        --  :help telescope.builtin
        local builtin = require 'telescope.builtin'
        vim.keymap.set('n', '<leader>sh', builtin.help_tags, { desc = '[S]earch [H]elp' })
        vim.keymap.set('n', '<leader>sk', builtin.keymaps, { desc = '[S]earch [K]eymaps' })
        vim.keymap.set('n', '<leader>sf', builtin.find_files, { desc = '[S]earch [F]iles' })
        vim.keymap.set('n', '<leader>ss', builtin.builtin, { desc = '[S]earch [S]elect Telescope' })
        vim.keymap.set('n', '<leader>sw', builtin.grep_string, { desc = '[S]earch current [W]ord' })
        vim.keymap.set('n', '<leader>sg', builtin.live_grep, { desc = '[S]earch by [G]rep' })
        vim.keymap.set('n', '<leader>sd', builtin.diagnostics, { desc = '[S]earch [D]iagnostics' })
        vim.keymap.set('n', '<leader>sr', builtin.resume, { desc = '[S]earch [R]esume' })
        vim.keymap.set('n', '<leader>s.', builtin.oldfiles, { desc = '[S]earch Recent Files ("." for repeat)' })
        vim.keymap.set('n', '<leader><leader>', builtin.buffers, { desc = '[ ] Find existing buffers' })
        
        --  :help telescope.builtin.current_buffer_fuzzy_find()
        vim.keymap.set('n', '<leader>/', function()
            builtin.current_buffer_fuzzy_find(require('telescope.themes').get_dropdown {
                winblend = 5,
                previewer = false,
            })
        end, { desc = '[/] Fuzzily search in current buffer' })

        --  :help telescope.builtin.live_grep()
        vim.keymap.set('n', '<leader>s/', function()
            builtin.live_grep {
                grep_open_files = true,
                prompt_title = 'Live Grep in Open Files',
            }
        end, { desc = '[S]earch [/] in Open Files' })

        --  :help telescope.builtin.find_files()
        vim.keymap.set('n', '<leader>sn', function()
            builtin.find_files { cwd = vim.fn.stdpath 'config' }
        end, { desc = '[S]earch [N]eovim files' })
    end,
}

--  vim: ts=4 sts=4 sw=4 et
